// <auto-generated />
using System;
using EarlyBookingService.WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EarlyBookingService.WebAPI.Migrations
{
    [DbContext(typeof(EarlyBookingServiceContext))]
    [Migration("20190126155107_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EarlyBookingService.Lib.Models.Accomodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Accomodation");

                    b.HasData(
                        new { Id = 1, Country = "Belgium", Email = "tessa.braeke@gmail.com", Name = "Hotel 't Zonnetje" },
                        new { Id = 2, Country = "Netherlands", Email = "tessa.braeke@gmail.com", Name = "Hotel aan Zee" },
                        new { Id = 3, Country = "United Kingdom", Email = "tessa.braeke@gmail.com", Name = "Joly Sailor" },
                        new { Id = 4, Country = "Germany", Email = "tessa.braeke@gmail.com", Name = "Hotel am See" }
                    );
                });

            modelBuilder.Entity("EarlyBookingService.Lib.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccomodationId");

                    b.Property<DateTime>("BookingDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("ReservationNumber");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationId");

                    b.ToTable("Booking");

                    b.HasData(
                        new { Id = 1, AccomodationId = 1, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "A1A1A1", StartDate = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 2, AccomodationId = 1, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "A2A2A2", StartDate = new DateTime(2019, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 3, AccomodationId = 2, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "B1B1B1", StartDate = new DateTime(2019, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 4, AccomodationId = 2, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "B2B2B2", StartDate = new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 5, AccomodationId = 3, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "C1C1C1", StartDate = new DateTime(2019, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 6, AccomodationId = 3, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "C2C2C2", StartDate = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 7, AccomodationId = 3, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "C3C3C3", StartDate = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 8, AccomodationId = 4, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "D1D1D1", StartDate = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 9, AccomodationId = 4, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "D2D2D2", StartDate = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 10, AccomodationId = 4, BookingDate = new DateTime(2019, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), EndDate = new DateTime(2019, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationNumber = "D3D3D3", StartDate = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("EarlyBookingService.Lib.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("BookingId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Participant");

                    b.HasData(
                        new { Id = 1, BirthDate = new DateTime(1980, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 1, FirstName = "Jan", LastName = "Kapitein" },
                        new { Id = 2, BirthDate = new DateTime(1992, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 1, FirstName = "Piet", LastName = "Kapitein" },
                        new { Id = 3, BirthDate = new DateTime(1995, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 2, FirstName = "Joris", LastName = "Kapitein" },
                        new { Id = 4, BirthDate = new DateTime(1960, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 2, FirstName = "Korneel", LastName = "Kapitein" },
                        new { Id = 5, BirthDate = new DateTime(1918, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 3, FirstName = "Irma", LastName = "De Bruyne" },
                        new { Id = 6, BirthDate = new DateTime(1918, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 3, FirstName = "Georges", LastName = "Van Renterghem" },
                        new { Id = 7, BirthDate = new DateTime(1961, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 4, FirstName = "Lorna", LastName = "Bogaert" },
                        new { Id = 8, BirthDate = new DateTime(1955, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 4, FirstName = "Daniel", LastName = "Braeke" },
                        new { Id = 9, BirthDate = new DateTime(1990, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 5, FirstName = "Knabbel", LastName = "Eekhoorn" },
                        new { Id = 10, BirthDate = new DateTime(1990, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 5, FirstName = "Babbel", LastName = "Eekhoorn" },
                        new { Id = 11, BirthDate = new DateTime(1940, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 6, FirstName = "Jon", LastName = "Snow" },
                        new { Id = 12, BirthDate = new DateTime(1941, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 6, FirstName = "Daenerys", LastName = "Targaryen" },
                        new { Id = 13, BirthDate = new DateTime(2000, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 7, FirstName = "Jaap", LastName = "Vos" },
                        new { Id = 14, BirthDate = new DateTime(1999, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 7, FirstName = "Jeroen", LastName = "Vos" },
                        new { Id = 15, BirthDate = new DateTime(1970, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 8, FirstName = "Fatima", LastName = "Baba" },
                        new { Id = 16, BirthDate = new DateTime(1970, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 8, FirstName = "Ali", LastName = "Baba" },
                        new { Id = 17, BirthDate = new DateTime(1990, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 9, FirstName = "Thomas", LastName = "Sanders" },
                        new { Id = 18, BirthDate = new DateTime(1982, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 9, FirstName = "Annelies", LastName = "Sanders" },
                        new { Id = 19, BirthDate = new DateTime(1984, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 9, FirstName = "Nathalie", LastName = "Sanders" },
                        new { Id = 20, BirthDate = new DateTime(1950, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 10, FirstName = "Homer", LastName = "Simpson" },
                        new { Id = 21, BirthDate = new DateTime(1953, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 10, FirstName = "Marge", LastName = "Simpson" },
                        new { Id = 22, BirthDate = new DateTime(1985, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 10, FirstName = "Lisa", LastName = "Simpson" },
                        new { Id = 23, BirthDate = new DateTime(1984, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 10, FirstName = "Bart", LastName = "Simpson" },
                        new { Id = 24, BirthDate = new DateTime(1989, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingId = 10, FirstName = "Maggie", LastName = "Simpson" }
                    );
                });

            modelBuilder.Entity("EarlyBookingService.Lib.Models.PriceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookingId");

                    b.Property<double>("Cost");

                    b.Property<int>("PurchaseCostId");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("PurchaseCostId");

                    b.ToTable("PriceDetail");

                    b.HasData(
                        new { Id = 1, BookingId = 1, Cost = -100.0, PurchaseCostId = 1 },
                        new { Id = 2, BookingId = 1, Cost = 1000.0, PurchaseCostId = 2 },
                        new { Id = 3, BookingId = 2, Cost = 1400.0, PurchaseCostId = 2 },
                        new { Id = 4, BookingId = 3, Cost = -210.0, PurchaseCostId = 3 },
                        new { Id = 5, BookingId = 3, Cost = 1400.0, PurchaseCostId = 4 },
                        new { Id = 6, BookingId = 4, Cost = 1960.0, PurchaseCostId = 4 },
                        new { Id = 7, BookingId = 5, Cost = -400.0, PurchaseCostId = 5 },
                        new { Id = 8, BookingId = 5, Cost = 2000.0, PurchaseCostId = 6 },
                        new { Id = 9, BookingId = 6, Cost = -400.0, PurchaseCostId = 5 },
                        new { Id = 10, BookingId = 6, Cost = 2000.0, PurchaseCostId = 6 },
                        new { Id = 11, BookingId = 7, Cost = 3600.0, PurchaseCostId = 6 },
                        new { Id = 12, BookingId = 8, Cost = -750.0, PurchaseCostId = 7 },
                        new { Id = 13, BookingId = 8, Cost = 3000.0, PurchaseCostId = 7 },
                        new { Id = 14, BookingId = 9, Cost = -1125.0, PurchaseCostId = 7 },
                        new { Id = 15, BookingId = 9, Cost = 4500.0, PurchaseCostId = 7 },
                        new { Id = 16, BookingId = 10, Cost = -1875.0, PurchaseCostId = 7 },
                        new { Id = 17, BookingId = 10, Cost = 7500.0, PurchaseCostId = 7 }
                    );
                });

            modelBuilder.Entity("EarlyBookingService.Lib.Models.PurchaseCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccomodationId");

                    b.Property<double>("Amount");

                    b.Property<DateTime>("BookingEndDate");

                    b.Property<DateTime>("BookingStartDate");

                    b.Property<int>("CostType");

                    b.Property<DateTime>("PrepaymentDate");

                    b.Property<int>("PrepaymentPercentage");

                    b.Property<DateTime>("ReservationEndDate");

                    b.Property<DateTime>("ReservationStartDate");

                    b.Property<int>("Status");

                    b.Property<int>("ValueType");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationId");

                    b.ToTable("PurchaseCost");

                    b.HasData(
                        new { Id = 1, AccomodationId = 1, Amount = 10.0, BookingEndDate = new DateTime(2019, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingStartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), CostType = 1, PrepaymentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PrepaymentPercentage = 0, ReservationEndDate = new DateTime(2019, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationStartDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, ValueType = 0 },
                        new { Id = 2, AccomodationId = 1, Amount = 50.0, BookingEndDate = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingStartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), CostType = 0, PrepaymentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PrepaymentPercentage = 0, ReservationEndDate = new DateTime(2019, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationStartDate = new DateTime(2019, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, ValueType = 1 },
                        new { Id = 3, AccomodationId = 2, Amount = 15.0, BookingEndDate = new DateTime(2019, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingStartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), CostType = 1, PrepaymentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PrepaymentPercentage = 0, ReservationEndDate = new DateTime(2019, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationStartDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, ValueType = 0 },
                        new { Id = 4, AccomodationId = 2, Amount = 70.0, BookingEndDate = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingStartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), CostType = 0, PrepaymentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PrepaymentPercentage = 0, ReservationEndDate = new DateTime(2019, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationStartDate = new DateTime(2019, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, ValueType = 1 },
                        new { Id = 5, AccomodationId = 3, Amount = 20.0, BookingEndDate = new DateTime(2019, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingStartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), CostType = 1, PrepaymentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PrepaymentPercentage = 0, ReservationEndDate = new DateTime(2019, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationStartDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, ValueType = 0 },
                        new { Id = 6, AccomodationId = 3, Amount = 100.0, BookingEndDate = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingStartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), CostType = 0, PrepaymentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PrepaymentPercentage = 0, ReservationEndDate = new DateTime(2019, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationStartDate = new DateTime(2019, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, ValueType = 1 },
                        new { Id = 7, AccomodationId = 4, Amount = 25.0, BookingEndDate = new DateTime(2019, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingStartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), CostType = 1, PrepaymentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PrepaymentPercentage = 0, ReservationEndDate = new DateTime(2019, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationStartDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, ValueType = 0 },
                        new { Id = 8, AccomodationId = 4, Amount = 150.0, BookingEndDate = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingStartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), CostType = 0, PrepaymentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PrepaymentPercentage = 0, ReservationEndDate = new DateTime(2019, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationStartDate = new DateTime(2019, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, ValueType = 1 },
                        new { Id = 9, AccomodationId = 4, Amount = 15.0, BookingEndDate = new DateTime(2018, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), BookingStartDate = new DateTime(2018, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), CostType = 1, PrepaymentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), PrepaymentPercentage = 0, ReservationEndDate = new DateTime(2019, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), ReservationStartDate = new DateTime(2019, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, ValueType = 1 }
                    );
                });

            modelBuilder.Entity("EarlyBookingService.Lib.Models.Booking", b =>
                {
                    b.HasOne("EarlyBookingService.Lib.Models.Accomodation", "Accomodation")
                        .WithMany("Bookings")
                        .HasForeignKey("AccomodationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EarlyBookingService.Lib.Models.Participant", b =>
                {
                    b.HasOne("EarlyBookingService.Lib.Models.Booking", "Booking")
                        .WithMany("Participants")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EarlyBookingService.Lib.Models.PriceDetail", b =>
                {
                    b.HasOne("EarlyBookingService.Lib.Models.Booking", "Booking")
                        .WithMany("PriceDetails")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EarlyBookingService.Lib.Models.PurchaseCost", "PurchaseCost")
                        .WithMany()
                        .HasForeignKey("PurchaseCostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EarlyBookingService.Lib.Models.PurchaseCost", b =>
                {
                    b.HasOne("EarlyBookingService.Lib.Models.Accomodation", "Accomodation")
                        .WithMany("PurchaseCosts")
                        .HasForeignKey("AccomodationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
